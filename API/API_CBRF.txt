Документация API
Представляем вашему вниманию REST-API доступа к статистической информации. 
Сервис предоставляет данные в структурированном виде (JSON).  

Детальная информация по составу и структуре сервиса описана в Open API 3.0.
Клиентский код может быть создан автоматически вашей платформой разработки (если она это позволяет) либо можно использовать сторонние онлайн-ресурсы.

Сервис Swagger SnowJS API v1.0
Statistics universal API


Описание методов сервиса:

Запрос /data (http-get) — Данные для таблицы
Аргументы:
y1 — год начала периода (обязательный)
Тип — целое число
y2 — год окончания периода (обязательный)
Тип — целое число
datasetId — id показателя (обязательный)
Тип — целое число
publicationId — id публикации (обязательный)
Тип — целое число
measureId — id разреза
Тип — целое число
Результат — dataset
Формат application/json
Тип — объект со свойствами:
RawData
Тип — массив, элементы: объект со свойствами:
element_id — id показателя
Тип — целое число
measure_id — id разреза
Тип — целое число
unit_id — id измерения
Тип — целое число
obs_val — Значение
Тип — десятичное число
rowId — Дата id
Тип — целое число
dt — текстовое значение даты (или периода)
Тип — строка
periodicity — Периодичность
Тип — строка
colId — идентификатор колонки
Тип — целое число
date — Дата
Тип — строка
digits — Количество знаков после запятой
Тип — целое число
headerData
Тип — массив, элементы: объект со свойствами:
id — Идентификатор показатея
Тип — целое число
elname — Название показателя
Тип — строка
units
Тип — массив, элементы: объект со свойствами:
id — id размерности
Тип — целое число
val — Название
Тип — строка
DTRange
Тип — массив, элементы: объект со свойствами:
FromY — Год начала публикации
Тип — целое число
ToY — Год окончания публикации
Тип — целое число
SType
Тип — массив, элементы: объект со свойствами:
sType — Тип отображения данных
Тип — целое число
dsName — Название показателя
Тип — строка
PublName — Название публикации
Тип — строка
Запрос /datasets (http-get) — Показатели
Аргументы:
publicationId — Идентификатор публикации (обязательный)
Тип — целое число
Результат — dataset
Формат application/json
Тип — массив, элементы: объект со свойствами:
id — Идентификатор записи показателя
Тип — целое число
name — Название
Тип — строка
type — Тип отображения
Тип — целое число
reporting — Тип показателя
Тип — строка
full_name — Полное название показателя
Тип — строка
link — Ссылка на источник данных
Тип — строка
updated_time — Дата обновления данных
Тип — строка
Запрос /measures (http-get) — Измерения (Разрезы)
Аргументы:
datasetId — Идентификатор показателя (обязательный)
Тип — целое число
Результат — dataset
Формат application/json
Тип — объект со свойствами:
measure
Тип — массив, элементы: объект со свойствами:
id — Идентификатор разреза
Тип — целое число
name — Название
Тип — строка
parent_id — Идентификатор родительского разреза
Тип — целое число
sort — Порядок сортировки
Тип — целое число
Запрос /publications (http-get) — Категории
Без аргументов
Результат — dataset
Формат application/json
Тип — массив, элементы: объект со свойствами:
id — Идентификатор записи
Тип — целое число
parent_id — Идентификатор корневой записи
Тип — целое число
category_name — Название
Тип — строка
NoActive — Это раздел данных
Тип — целое число
pub_description — Описание
Тип — строка
updated_time — Последнее обновление данных
Тип — строка
Запрос /years (http-get) — Доступный диапазон годов
Аргументы:
datasetId — Идентификатор показателя (обязательный)
Тип — целое число
measureId — Идентификатор разреза
Тип — целое число
Результат — dataset
Формат application/json
Тип — массив, элементы: объект со свойствами:
FromYear — Год начала периода
Тип — целое число
ToYear — Год окончания периода
Тип — целое число
Запрос /yearsEx (http-get) — Диапазон годов (расширенная версия)
Аргументы:
publicationId — id публикации (обязательный)
Тип — целое число
ids — Показатели/Измерения
Тип — массив, элементы: целое число
Результат — dataset
Формат application/json
Тип — массив, элементы: объект со свойствами:
Запрос /datasetsEx (http-get) — Показатели и измерения (расширенная версия)
Аргументы:
publicationId — ID Публикации (обязательный)
Тип — целое число
Результат — dataset
Формат application/json
Тип — объект со свойствами:
indicators
Тип — массив, элементы: объект со свойствами:
id — Идентификатор показателя
Тип — целое число
parent_id — Идентификатор показателя родителя
Тип — целое число
name — Название
Тип — строка
measures_1
Тип — массив, элементы: объект со свойствами:
id — Идентификатор измерения
Тип — целое число
parent_id — Идентификатор измерения родителя
Тип — целое число
name — Название
Тип — строка
measures_2
Тип — массив, элементы: объект со свойствами:
id — Идентификатор измерения
Тип — целое число
parent_id — Идентификатор измерения родителя
Тип — целое число
name — Название
Тип — строка
units
Тип — массив, элементы: объект со свойствами:
id — Идентификатор размерности
Тип — целое число
parent_id — Идентификатор размерности родителя
Тип — целое число
name — Название
Тип — строка
years
Тип — массив, элементы: объект со свойствами:
FromYear — Год начала периода
Тип — целое число
ToYear — Год окончания периода
Тип — целое число
Запрос /dataEx (http-get) — Данные (расширенная версия)
Аргументы:
publicationId — ID Публикации (обязательный)
Тип — целое число
y1 — год начала периода (обязательный)
Тип — целое число
y2 — год окончания периода (обязательный)
Тип — целое число
i_ids — идентификатор показателя (необязательный). Тип массив. При отсутствии аргумента должны выводится данные по всем показателям.
Тип — массив, элементы: целое число
m1_ids — идентификатор 1-го разреза (таблица measures). Необязательный. При отсутствии аргумента должны выводится данные по всем позициям таблицы measures (при наличии ссылок в таблице obs).
Тип — массив, элементы: целое число
m2_ids — идентификатор 2-го разреза (таблица elements). Необязательный. При отсутствии аргумента должны выводится данные по всем позициям таблицы elements (при наличии ссылок в таблице obs).
Тип — массив, элементы: целое число
Результат — dataset
Формат application/json
Тип — объект со свойствами:
RawData
Тип — массив, элементы: объект со свойствами:
element_id — id элемента
Тип — целое число
measure_id — id разреза
Тип — целое число
unit_id — id измерения
Тип — целое число
obs_val — Значение
Тип — десятичное число
rowId — id записи
Тип — целое число
dt — текстовое значение даты (или периода)
Тип — строка
periodicity — Периодичность
Тип — строка
colId — идентификатор колонки
Тип — целое число
date — Дата
Тип — строка
datasetId — id показателя
Тип — целое число
period_id — id периода
Тип — целое число
links
Тип — массив, элементы: объект со свойствами:
colId — ID колонки
Тип — целое число
name — Название колонки
Тип — строка
stype — Тип
Тип — целое число
datasetId — id показателя
Тип — целое число
Запрос /DatasetDescription (http-get) — получение описания (методологии) показателя
Аргументы:
datasetId — id показателя (обязательный)
Тип — целое число
Результат — dataset
Формат application/json
Тип — массив, элементы: объект со свойствами:
description — Описание (htm)
Тип — строка
Запрос /dataNew (http-get) — Данные показателей
Аргументы:
categoryId — Идентификатор категории (обязательный) (обязательный)
Тип — целое число
y1 — Год начала периода (обязательный)
Тип — целое число
y2 — Год окончания периода (обязательный)
Тип — целое число
i_ids — Идентификатор показателя идентификатор (необязательный). При отсутствии аргумента выводятся данные по всем показателям
Тип — массив, элементы: целое число
m1_ids — Идентификатор 1-го разреза (необязательный). При отсутствии аргумента выводятся данные по всем позициям разреза.
Тип — массив, элементы: целое число
m2_ids — Идентификатор 2-го разреза (необязательный). При отсутствии аргумента выводятся данные по всем позициям разреза.
Тип — массив, элементы: целое число
Результат — dataset
Формат application/json
Тип — объект со свойствами:
RowData
Тип — массив, элементы: объект со свойствами:
id — Уникальный идентификатор записи
Тип — целое число
indicator_id — Идентификатор показателя
Тип — целое число
measure1_id — Идентификатор первого разреза
Тип — целое число
measure2_id — Идентификатор второго разреза
Тип — целое число
unit_id — Идентификатор единицы измерения
Тип — целое число
obs_val — Значение показателя
Тип — десятичное число
date — Отчетная дата
Тип — строка
periodicity — Периодичность
Тип — строка
Links
Тип — массив, элементы: объект со свойствами:
indicator_id — Идентификатор показателя
Тип — целое число
indicator_parent — Ссылка на родительский идентификатор показателя
Тип — целое число
measure1_id — Идентификатор первого разреза
Тип — целое число
measure2_id — Идентификатор второго разреза
Тип — целое число
unit_id — Идентификатор единицы измерения
Тип — целое число
indicator_name — Наименование показателя
Тип — строка
measure1_name — Наименование первого разреза
Тип — строка
measure2_name — Наименование второго разреза
Тип — строка
un_name — Наименование единицы измерения
Тип — строка
Запрос /categoryNew (http-get) — Список категорий и показателей
Без аргументов
Результат — dataset
Формат application/json
Тип — объект со свойствами:
category
Тип — массив, элементы: объект со свойствами:
category_id — Идентификатор категории
Тип — целое число
category_name — Наименование категории
Тип — строка
indicator_id — Идентификатор показателя
Тип — целое число
indicator_name — Наименование показателя
Тип — строка
link — Ссылка на описание методологии
Тип — строка
begin_dt — Дата начала наблюдения
Тип — целое число
end_dt — Дата окончания наблюдения
Тип — целое число
indicator_parent — Родительский идентификатор показателя
Тип — целое число
Внимание. В методах /years и /data аргумент запроса (measureId) можно не указывать или присваивать −1, если type для запрашиваемого показателя /datasets не равен 1, так как у таких показателей нет разрезов /measures.

Пример на языке Python:

# Пример работы с API Сервиса получения данных по шагам
# аналогично реализации на демонстрационной странице сервиса
# http://www.cbr.ru/statistics/data-service/
# используется python 3.11

from asyncio.windows_events import NULL
import requests
import json 
from types import SimpleNamespace
import PivotExport as pe #дополнительный пакет для экспорта данных в CSV в виде простой таблицы

print("Пример работы с API Сервиса получения данных")
BASE_URL = 'http://www.cbr.ru/dataservice' #источник данных


# необходимо получить все параметры для основного запроса /data
# для этого последовательно получаем данные справочников


print("**** Список публикаций ****")
response = requests.get(f"{BASE_URL}/publications")
pe.SaveJsonToFile(response,"publications.json") # сохраяеем данные запроса в файл (для теста)
publicationObject= response.json(object_hook=lambda d: SimpleNamespace(**d))



for pbl in publicationObject:
    print(f"id:{pbl.id} title:{pbl.category_name} { ' - NoActive' if pbl.NoActive else '' }")
    
publId=-1 #id публикации
while True:
    try:
        publId=int(input("Введите id публикации:"))
        selPublItem = next((e for e in publicationObject if e.id == publId), None)
        if not selPublItem==None and not selPublItem.NoActive:
            break
        else:
            print ("Данного id не существует либо раздел не может быть выбран (NoActive)")
    except ValueError:
        print("ошибка! id должен быть числом...")

print(f"Для id публикации:{publId} нужно выбрать показатель из списка")
print("**** Список показателей  ****")
      
responseDS = requests.get(f"{BASE_URL}/datasets?publicationId={publId}")
pe.SaveJsonToFile(response,"datasets.json") # сохраяеем данные запроса в файл (для теста)
DSObject= responseDS.json(object_hook=lambda d: SimpleNamespace(**d))

for dsItem in DSObject:
    print(f"id:{dsItem.id}, title:{dsItem.name}")    

dsId=-1 #id показателя
while True:
    try:
        dsId=int(input("Введите id показателя:"))
        selDSItem = next((e for e in DSObject if e.id == dsId), None)
        if selDSItem is None:
            print("Данного id не существует")        
        else:
            currentTypeVal=selDSItem.type
            break
    except ValueError:
        print("ошибка! id должен быть числом...")


print("currentTypeVal",currentTypeVal)
melId=-1 # id разреза

if currentTypeVal == 1:
   print("**** Список разрезов  ****")
   responseME = requests.get(f"{BASE_URL}/measures?datasetId={dsId}")
   pe.SaveJsonToFile(response,"measures.json") # сохраяеем данные запроса в файл (для теста)
   MEObject= responseME.json(object_hook=lambda d: SimpleNamespace(**d)).measure
   for meItem in MEObject:
        print(f"id:{meItem.id}, title:{meItem.name}")
   while True:
       try: 
            melId=int(input("Введите id разреза:"))
            selMeItem = next((e for e in MEObject if e.id == melId), None)
            if selMeItem is None:
                print("Данного id не существует")        
            else:            
                break   
       except ValueError:
            print("ошибка! id должен быть числом...")
else:
    print("У этого показателя нет разрезов")


yaersParams = {'measureId': melId, 'datasetId': dsId}
responseYears = requests.get(f"{BASE_URL}/years", params=yaersParams) 
pe.SaveJsonToFile(response,"years.json") # сохраяеем данные запроса в файл (для теста)
yy=responseYears.json(object_hook=lambda d: SimpleNamespace(**d))[0]
print(f"\r\nИнформация доступна с {yy.FromYear} по {yy.ToYear} год")

FromYear=-1
ToYear=-1
while True:
    try:
        FromYear=int(input("Введите год начала периода:"))
        ToYear=int(input("Введите год окончания периода:"))
        if FromYear >= yy.FromYear and ToYear <= yy.ToYear:
            break
        else:
            print(f"\r\nИнформация доступна с {yy.FromYear} по {yy.ToYear} год")
    except ValueError:
        print("ошибка! год должен быть числом...")        


# Далее получаем массив данных
dataParams = {'y1': FromYear, 'y2': ToYear, 'publicationId' : publId, 'datasetId' : dsId, "measureId" : melId}
responseData = requests.get(f"{BASE_URL}/data", params=dataParams)
pe.SaveJsonToFile(responseData,"data.json") # сохраяеем данные запроса в файл (для теста)
pe.ExportDataToCSV (responseData.json(object_hook=lambda d: SimpleNamespace(**d)))

print("All done...")